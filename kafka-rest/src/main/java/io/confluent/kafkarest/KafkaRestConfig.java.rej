diff a/kafka-rest/src/main/java/io/confluent/kafkarest/KafkaRestConfig.java b/kafka-rest/src/main/java/io/confluent/kafkarest/KafkaRestConfig.java	(rejected hunks)
@@ -332,7 +332,7 @@ public class KafkaRestConfig extends RestConfig {
                     + " then we refer to Kafka topics if topic name does not contain ':', topics with ':' refer to Streams. "
                     + " If default stream is set to valid value and topic name does not contain ':' then we refer to Streams "
                     + "topic in the default stream. The default value is '" + MAPR_STREAMS_BACKEND + "'.";
-  public static final boolean REST_PROXY_IMPERSONATION_DEFAULT = false;
+  public static final boolean REST_PROXY_IMPERSONATION_DEFAULT = true;
 
   protected static final String SSL_PROTOCOL_DEFAULT_OVERRIDE = "TLSv1.2";
 
@@ -382,7 +382,21 @@ public class KafkaRestConfig extends RestConfig {
         .defineOverride(
             SSL_PROTOCOL_CONFIG, Type.STRING, 
             SSL_PROTOCOL_DEFAULT_OVERRIDE,
-            Importance.MEDIUM, SSL_PROTOCOL_DOC)            
+            Importance.MEDIUM, SSL_PROTOCOL_DOC)
+        .defineOverride(
+            AUTHENTICATION_METHOD_CONFIG,
+            Type.STRING, AUTHENTICATION_METHOD_BASIC,
+            AUTHENTICATION_METHOD_VALIDATOR, 
+            Importance.LOW, AUTHENTICATION_METHOD_DOC
+        )
+        .defineOverride(
+            AUTHENTICATION_REALM_CONFIG,
+            Type.STRING,
+            "jpamLogin",
+            Importance.LOW,
+            AUTHENTICATION_REALM_DOC)
+        .defineOverride(AUTHENTICATION_ROLES_CONFIG, Type.LIST, AUTHENTICATION_ROLES_DEFAULT,
+            Importance.LOW, AUTHENTICATION_ROLES_DOC)
         .define(ID_CONFIG, Type.STRING, ID_DEFAULT, Importance.HIGH, ID_CONFIG_DOC)
         .define(HOST_NAME_CONFIG, Type.STRING, HOST_NAME_DEFAULT, Importance.MEDIUM, HOST_NAME_DOC)
         .define(
